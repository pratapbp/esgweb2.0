"use client"

import { useState, useRef, useEffect } from "react"
import { motion } from "framer-motion"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Badge } from "@/components/ui/badge"
import { ScrollArea } from "@/components/ui/scroll-area"
import {
  Brain,
  Send,
  Mic,
  FileText,
  Thermometer,
  Calendar,
  Download,
  Copy,
  ThumbsUp,
  ThumbsDown,
  Loader2,
  Paperclip,
  Sparkles,
} from "lucide-react"
import { toast } from "sonner"

interface Message {
  id: string
  type: "user" | "assistant"
  content: string
  timestamp: Date
  attachments?: Array<{
    name: string
    type: string
    url?: string
  }>
}

const quickPrompts = [
  {
    id: "protocol",
    text: "Draft a trial protocol for Phase 2 diabetes vaccine",
    icon: FileText,
    category: "Clinical Trials",
  },
  {
    id: "labeling",
    text: "List labeling requirements for India & EU",
    icon: FileText,
    category: "Regulatory",
  },
  {
    id: "cold-chain",
    text: "Show temperature breach incidents in past 30 days",
    icon: Thermometer,
    category: "Supply Chain",
  },
  {
    id: "compliance",
    text: "Generate FDA submission checklist for biologics",
    icon: Calendar,
    category: "Compliance",
  },
]

const sampleResponses = {
  protocol: {
    content: `# Phase 2 Clinical Trial Protocol: Diabetes Vaccine Study

## Study Overview
**Protocol ID:** DV-P2-2024-001
**Study Title:** A Randomized, Double-Blind, Placebo-Controlled Phase 2 Study of Novel Diabetes Vaccine in Type 1 Diabetes Patients

## Primary Objectives
- Evaluate safety and tolerability of the diabetes vaccine
- Assess immunogenicity and beta-cell preservation
- Determine optimal dosing regimen

## Study Design
- **Phase:** Phase 2
- **Design:** Randomized, double-blind, placebo-controlled
- **Duration:** 24 months
- **Sample Size:** 150 participants (100 active, 50 placebo)

## Inclusion Criteria
- Age 18-45 years
- Recent onset Type 1 diabetes (within 6 months)
- Positive for diabetes autoantibodies
- C-peptide levels ≥0.2 nmol/L

## Primary Endpoints
- Safety: Incidence of adverse events
- Efficacy: C-peptide preservation at 12 months
- Immunogenicity: T-cell response measurements

## Statistical Analysis Plan
- Primary analysis: Intent-to-treat population
- Statistical power: 80% to detect 30% difference
- Significance level: α = 0.05

*Generated by ESG Pharma Copilot - Ready for regulatory review*`,
    attachments: [
      { name: "Full Protocol Document.pdf", type: "pdf" },
      { name: "Statistical Analysis Plan.docx", type: "document" },
      { name: "Informed Consent Template.pdf", type: "pdf" },
    ],
  },
  labeling: {
    content: `# Pharmaceutical Labeling Requirements: India & EU

## India (CDSCO) Requirements

### Primary Label Requirements
- **Drug Name:** Generic and brand name in English and Hindi
- **Strength:** Clear indication of active ingredient concentration
- **Batch Number:** Alphanumeric batch identification
- **Manufacturing Date:** DD/MM/YYYY format
- **Expiry Date:** DD/MM/YYYY format
- **Storage Conditions:** Temperature and humidity specifications

### Mandatory Statements
- "For sale in India only"
- Manufacturing license number
- "Keep out of reach of children"
- Prescription drug warning (if applicable)

## European Union (EMA) Requirements

### Primary Label Elements
- **Product Name:** INN + strength + pharmaceutical form
- **Active Substances:** International Non-proprietary Names
- **Pharmaceutical Form:** Tablet, capsule, injection, etc.
- **Contents:** Net quantity of product
- **Route of Administration:** Oral, IV, IM, etc.

### Mandatory Information
- Marketing Authorization Number
- Batch number preceded by "Lot" or "Batch"
- Expiry date preceded by "EXP"
- Special storage conditions
- Name and address of Marketing Authorization Holder

## Key Differences
| Aspect | India (CDSCO) | EU (EMA) |
|--------|---------------|----------|
| Language | English + Hindi | Local language + English |
| Date Format | DD/MM/YYYY | DD/MM/YYYY or DD MMM YYYY |
| Batch Prefix | Not specified | "Lot" or "Batch" required |
| Storage | Detailed conditions | Simplified statements |

*Compliance verified by ESG Regulatory AI - Updated as of January 2024*`,
    attachments: [
      { name: "India Labeling Guidelines.pdf", type: "pdf" },
      { name: "EU Labeling Regulation.pdf", type: "pdf" },
      { name: "Compliance Checklist.xlsx", type: "spreadsheet" },
    ],
  },
  "cold-chain": {
    content: `# Cold Chain Temperature Breach Analysis - Last 30 Days

## Executive Summary
**Total Shipments Monitored:** 1,247
**Temperature Breaches:** 8 incidents (0.64%)
**Critical Breaches:** 2 incidents (0.16%)
**Average Resolution Time:** 4.2 hours

## Breach Incidents Detail

### Critical Breaches (>8°C for >30 minutes)
1. **Shipment ID:** CC-2024-0156
   - **Date:** January 15, 2024
   - **Route:** Mumbai → Delhi
   - **Duration:** 45 minutes at 12°C
   - **Root Cause:** Refrigeration unit malfunction
   - **Product Impact:** 500 vials quarantined
   - **Resolution:** Emergency cold storage, product integrity confirmed

2. **Shipment ID:** CC-2024-0203
   - **Date:** January 22, 2024
   - **Route:** Chennai → Bangalore
   - **Duration:** 38 minutes at 10°C
   - **Root Cause:** Loading dock delay
   - **Product Impact:** 300 vials affected
   - **Resolution:** Stability testing initiated, products released

### Minor Breaches (5-8°C for <30 minutes)
- 6 incidents with average duration of 12 minutes
- All products maintained within acceptable stability limits
- No product recalls required

## Trend Analysis
- 67% reduction in breaches compared to previous month
- Improved response time by 2.3 hours
- Enhanced monitoring coverage to 99.8%

## Recommendations
1. Implement predictive maintenance for refrigeration units
2. Enhance loading dock temperature control
3. Deploy additional IoT sensors for real-time monitoring

*Real-time data from ESG Cold Chain Intelligence Platform*`,
    attachments: [
      { name: "Detailed Breach Report.pdf", type: "pdf" },
      { name: "Temperature Logs.csv", type: "spreadsheet" },
      { name: "Corrective Action Plan.docx", type: "document" },
    ],
  },
  compliance: {
    content: `# FDA Biologics Submission Checklist (BLA)

## Pre-Submission Requirements ✅

### Administrative Information
- [ ] Form FDA 356h (Application to Market a New Drug)
- [ ] User Fee Cover Sheet (Form FDA 3397)
- [ ] Financial Certification/Disclosure (Form FDA 3454/3455)
- [ ] Patent Information (Form FDA 3542)
- [ ] Establishment Registration and Drug Listing

### Product Quality (CMC) Section
- [ ] Description and Composition of Drug Product
- [ ] Manufacturing Information
- [ ] Control of Drug Substance
- [ ] Control of Drug Product
- [ ] Reference Standards
- [ ] Container Closure System
- [ ] Stability Data

## Clinical Data Requirements ✅

### Clinical Studies
- [ ] Adequate and Well-Controlled Studies
- [ ] Clinical Pharmacology Studies
- [ ] Microbiology Studies (if applicable)
- [ ] Clinical Safety Updates
- [ ] Risk Evaluation and Mitigation Strategy (REMS)

### Statistical Analysis
- [ ] Statistical Methods and Analysis Plans
- [ ] Clinical Study Reports
- [ ] Individual Patient Data Listings
- [ ] Case Report Forms (sample)

## Regulatory Compliance ✅

### Good Manufacturing Practices
- [ ] Manufacturing Facility Information
- [ ] Quality System Information
- [ ] Batch Records (representative)
- [ ] Validation Reports

### Labeling
- [ ] Proposed Prescribing Information
- [ ] Draft Labeling
- [ ] Medication Guide (if required)
- [ ] Patient Package Insert (if required)

## Risk Assessment ✅

### Safety Database
- [ ] Integrated Summary of Safety (ISS)
- [ ] Periodic Safety Update Reports
- [ ] Risk Management Plan
- [ ] Post-Marketing Study Commitments

## Submission Timeline
- **Target Submission Date:** Q2 2024
- **FDA Review Period:** 12 months (Priority Review: 8 months)
- **Expected Approval:** Q2 2025

## ESG Compliance Score: 94/100
**Areas for Improvement:**
- Complete stability data for 24-month timepoint
- Finalize manufacturing validation reports
- Submit updated safety database

*Generated by ESG Regulatory Intelligence - FDA guidance compliant*`,
    attachments: [
      { name: "BLA Submission Template.pdf", type: "pdf" },
      { name: "FDA Guidance Documents.zip", type: "archive" },
      { name: "Compliance Tracking Sheet.xlsx", type: "spreadsheet" },
    ],
  },
}

export default function PharmaCopilot() {
  const [messages, setMessages] = useState<Message[]>([
    {
      id: "welcome",
      type: "assistant",
      content:
        "Hello! I'm your ESG Pharma Copilot. I can help you with clinical trials, regulatory compliance, manufacturing processes, and supply chain optimization. How can I assist you today?",
      timestamp: new Date(),
    },
  ])
  const [inputValue, setInputValue] = useState("")
  const [isLoading, setIsLoading] = useState(false)
  const [isListening, setIsListening] = useState(false)
  const messagesEndRef = useRef<HTMLDivElement>(null)

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" })
  }

  useEffect(() => {
    scrollToBottom()
  }, [messages])

  const handleSendMessage = async (content: string) => {
    if (!content.trim()) return

    const userMessage: Message = {
      id: Date.now().toString(),
      type: "user",
      content,
      timestamp: new Date(),
    }

    setMessages((prev) => [...prev, userMessage])
    setInputValue("")
    setIsLoading(true)

    // Simulate API call
    setTimeout(() => {
      const promptKey = quickPrompts.find((p) => content.includes(p.text.split(" ")[0]))?.id
      const response = promptKey ? sampleResponses[promptKey as keyof typeof sampleResponses] : null

      const assistantMessage: Message = {
        id: (Date.now() + 1).toString(),
        type: "assistant",
        content:
          response?.content ||
          `I understand you're asking about "${content}". Let me analyze this and provide you with a comprehensive response based on current pharmaceutical regulations and best practices. This would typically include detailed analysis, recommendations, and relevant documentation.`,
        timestamp: new Date(),
        attachments: response?.attachments,
      }

      setMessages((prev) => [...prev, assistantMessage])
      setIsLoading(false)
    }, 2000)
  }

  const handleQuickPrompt = (prompt: string) => {
    handleSendMessage(prompt)
  }

  const handleVoiceInput = () => {
    setIsListening(!isListening)
    if (!isListening) {
      toast.info("Voice input activated")
      // Voice recognition would be implemented here
      setTimeout(() => {
        setIsListening(false)
        toast.success("Voice input completed")
      }, 3000)
    }
  }

  const copyToClipboard = (content: string) => {
    navigator.clipboard.writeText(content)
    toast.success("Copied to clipboard")
  }

  const downloadAttachment = (attachment: any) => {
    toast.success(`Downloading ${attachment.name}`)
  }

  return (
    <section className="py-20 bg-gradient-to-br from-gray-50 to-blue-50">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        {/* Section Header */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <Badge className="mb-4 bg-gradient-to-r from-purple-500 to-blue-500 text-white">
            <Brain className="w-4 h-4 mr-2" />
            Pharma Copilot Engine
          </Badge>
          <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
            Your AI-Powered{" "}
            <span className="bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent">
              Pharma Assistant
            </span>
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Get instant insights on clinical trials, regulatory compliance, manufacturing processes, and supply chain
            optimization with our intelligent pharma copilot.
          </p>
        </motion.div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Quick Prompts */}
          <motion.div
            initial={{ opacity: 0, x: -20 }}
            whileInView={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="space-y-4"
          >
            <h3 className="text-lg font-semibold text-gray-900 mb-4">Quick Actions</h3>
            {quickPrompts.map((prompt) => (
              <Card
                key={prompt.id}
                className="cursor-pointer hover:shadow-lg transition-all duration-300 border-0 bg-white/80 backdrop-blur-sm"
                onClick={() => handleQuickPrompt(prompt.text)}
              >
                <CardContent className="p-4">
                  <div className="flex items-start space-x-3">
                    <div className="w-10 h-10 bg-gradient-to-r from-purple-500 to-blue-500 rounded-lg flex items-center justify-center flex-shrink-0">
                      <prompt.icon className="w-5 h-5 text-white" />
                    </div>
                    <div className="flex-1">
                      <Badge variant="outline" className="mb-2 text-xs">
                        {prompt.category}
                      </Badge>
                      <p className="text-sm text-gray-700 leading-relaxed">{prompt.text}</p>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </motion.div>

          {/* Chat Interface */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6, delay: 0.2 }}
            viewport={{ once: true }}
            className="lg:col-span-2"
          >
            <Card className="h-[600px] flex flex-col border-0 shadow-xl bg-white/90 backdrop-blur-sm">
              <CardHeader className="bg-gradient-to-r from-purple-600 to-blue-600 text-white rounded-t-lg">
                <CardTitle className="flex items-center space-x-2">
                  <Brain className="w-6 h-6" />
                  <span>ESG Pharma Copilot</span>
                  <div className="ml-auto flex items-center space-x-2">
                    <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse" />
                    <span className="text-sm">Online</span>
                  </div>
                </CardTitle>
              </CardHeader>

              <CardContent className="flex-1 flex flex-col p-0">
                {/* Messages */}
                <ScrollArea className="flex-1 p-4">
                  <div className="space-y-4">
                    {messages.map((message) => (
                      <motion.div
                        key={message.id}
                        initial={{ opacity: 0, y: 10 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.3 }}
                        className={`flex ${message.type === "user" ? "justify-end" : "justify-start"}`}
                      >
                        <div
                          className={`max-w-[80%] rounded-lg p-4 ${
                            message.type === "user"
                              ? "bg-gradient-to-r from-purple-500 to-blue-500 text-white"
                              : "bg-gray-100 text-gray-900"
                          }`}
                        >
                          <div className="whitespace-pre-wrap text-sm leading-relaxed">{message.content}</div>

                          {/* Attachments */}
                          {message.attachments && (
                            <div className="mt-3 space-y-2">
                              {message.attachments.map((attachment, idx) => (
                                <div
                                  key={idx}
                                  className="flex items-center justify-between p-2 bg-white/10 rounded border border-white/20"
                                >
                                  <div className="flex items-center space-x-2">
                                    <Paperclip className="w-4 h-4" />
                                    <span className="text-xs">{attachment.name}</span>
                                  </div>
                                  <Button
                                    size="sm"
                                    variant="ghost"
                                    onClick={() => downloadAttachment(attachment)}
                                    className="h-6 w-6 p-0 hover:bg-white/20"
                                  >
                                    <Download className="w-3 h-3" />
                                  </Button>
                                </div>
                              ))}
                            </div>
                          )}

                          {/* Message Actions */}
                          {message.type === "assistant" && (
                            <div className="flex items-center justify-between mt-3 pt-2 border-t border-gray-200">
                              <div className="flex items-center space-x-2">
                                <Button
                                  size="sm"
                                  variant="ghost"
                                  onClick={() => copyToClipboard(message.content)}
                                  className="h-6 text-xs hover:bg-gray-200"
                                >
                                  <Copy className="w-3 h-3 mr-1" />
                                  Copy
                                </Button>
                              </div>
                              <div className="flex items-center space-x-1">
                                <Button size="sm" variant="ghost" className="h-6 w-6 p-0 hover:bg-gray-200">
                                  <ThumbsUp className="w-3 h-3" />
                                </Button>
                                <Button size="sm" variant="ghost" className="h-6 w-6 p-0 hover:bg-gray-200">
                                  <ThumbsDown className="w-3 h-3" />
                                </Button>
                              </div>
                            </div>
                          )}

                          <div className="text-xs opacity-70 mt-2">{message.timestamp.toLocaleTimeString()}</div>
                        </div>
                      </motion.div>
                    ))}

                    {/* Loading indicator */}
                    {isLoading && (
                      <motion.div
                        initial={{ opacity: 0, y: 10 }}
                        animate={{ opacity: 1, y: 0 }}
                        className="flex justify-start"
                      >
                        <div className="bg-gray-100 rounded-lg p-4 flex items-center space-x-2">
                          <Loader2 className="w-4 h-4 animate-spin" />
                          <span className="text-sm text-gray-600">Analyzing your request...</span>
                        </div>
                      </motion.div>
                    )}
                  </div>
                  <div ref={messagesEndRef} />
                </ScrollArea>

                {/* Input */}
                <div className="p-4 border-t border-gray-200">
                  <div className="flex items-center space-x-2">
                    <div className="flex-1 relative">
                      <Input
                        value={inputValue}
                        onChange={(e) => setInputValue(e.target.value)}
                        placeholder="Ask about clinical trials, regulatory compliance, manufacturing..."
                        className="pr-12 border-gray-300 focus:border-purple-500"
                        onKeyPress={(e) => {
                          if (e.key === "Enter" && !e.shiftKey) {
                            e.preventDefault()
                            handleSendMessage(inputValue)
                          }
                        }}
                      />
                      <Button
                        size="sm"
                        variant="ghost"
                        onClick={handleVoiceInput}
                        className={`absolute right-2 top-1/2 transform -translate-y-1/2 h-6 w-6 p-0 ${
                          isListening ? "text-red-500" : "text-gray-400"
                        }`}
                      >
                        <Mic className={`w-4 h-4 ${isListening ? "animate-pulse" : ""}`} />
                      </Button>
                    </div>
                    <Button
                      onClick={() => handleSendMessage(inputValue)}
                      disabled={!inputValue.trim() || isLoading}
                      className="bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600 text-white"
                    >
                      <Send className="w-4 h-4" />
                    </Button>
                  </div>
                </div>
              </CardContent>
            </Card>
          </motion.div>
        </div>

        {/* Features */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="mt-16 grid grid-cols-1 md:grid-cols-3 gap-6"
        >
          <Card className="text-center p-6 border-0 bg-white/80 backdrop-blur-sm">
            <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-lg flex items-center justify-center mx-auto mb-4">
              <Sparkles className="w-6 h-6 text-white" />
            </div>
            <h3 className="text-lg font-semibold text-gray-900 mb-2">Intelligent Responses</h3>
            <p className="text-gray-600 text-sm">
              Get contextual, regulation-compliant answers powered by pharmaceutical domain expertise
            </p>
          </Card>

          <Card className="text-center p-6 border-0 bg-white/80 backdrop-blur-sm">
            <div className="w-12 h-12 bg-gradient-to-r from-purple-500 to-blue-500 rounded-lg flex items-center justify-center mx-auto mb-4">
              <FileText className="w-6 h-6 text-white" />
            </div>
            <h3 className="text-lg font-semibold text-gray-900 mb-2">Document Generation</h3>
            <p className="text-gray-600 text-sm">
              Automatically generate protocols, compliance documents, and regulatory submissions
            </p>
          </Card>

          <Card className="text-center p-6 border-0 bg-white/80 backdrop-blur-sm">
            <div className="w-12 h-12 bg-gradient-to-r from-green-500 to-emerald-500 rounded-lg flex items-center justify-center mx-auto mb-4">
              <Brain className="w-6 h-6 text-white" />
            </div>
            <h3 className="text-lg font-semibold text-gray-900 mb-2">Real-time Insights</h3>
            <p className="text-gray-600 text-sm">
              Access live data from your SAP systems, clinical trials, and supply chain operations
            </p>
          </Card>
        </motion.div>
      </div>
    </section>
  )
}
